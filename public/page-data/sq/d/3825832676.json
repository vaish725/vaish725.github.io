{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"AutoPano","tech":["Python","OpenCV","git"],"github":"https://github.com/MayankD409/AutoPano.git","external":""},"html":"<p>Developed an automatic panorama stitching solution using traditional techniques and deep learning models (HomographyNet), achieving high-quality results with supervised and unsupervised learning, validated on synthetic and real-world image sets.</p>"}},{"node":{"frontmatter":{"title":"Human detection and Tracking","tech":["C++","OpenCV","MiDAS Resnet","GoogleTest","CMake"],"github":"https://github.com/MayankD409/HumanDetectionandTracking.git","external":""},"html":"<p>A C++ module for detecting and tracking human obstacles using Monocular Camera with ResNet &#x26; OpenCV integration within the robot's reference frame.</p>"}},{"node":{"frontmatter":{"title":"Stereo Vision","tech":["Python","OpenCV","NumPy","Matplotlib"],"github":"https://github.com/MayankD409/Stereo-Vision.git","external":""},"html":"<p>A Python-based stereo vision pipeline to accurately generate disparity and depth maps from stereo image pairs with OpenCV and NumPy.</p>"}},{"node":{"frontmatter":{"title":"Pb-Lite and DL for Edge Detection","tech":["Python","OpenCV","PyTorch","DenseNet","ResNext"],"github":"https://github.com/MayankD409/Pb_lite_Edge_Detection.git","external":""},"html":"<p>An edge detection implementation that integrates Probability-based methods (Pb-Lite) with deep learning models like DenseNet, ResNext and a cutom architecture to improve accuracy and robustness.</p>"}},{"node":{"frontmatter":{"title":"AutoCalib","tech":["Python","OpenCV","NumPy","Matplotlib","CMake"],"github":"https://github.com/MayankD409/AutoCalib.git","external":""},"html":"<p>A Python implementation of Zhang's camera calibration method, automating checkerboard detection and accurately estimating camera parameters using OpenCV and NumPy.</p>"}},{"node":{"frontmatter":{"title":"LQR and LQG for stabilizing Two Pendulum cart","tech":["MATLAB","LQR","LQG","Leunberger Observer"],"github":"","external":"https://www.devoted.com/"},"html":"<p>Modeled and controlled a two-pendulum crane system using cutom LQR and LQG controllers implementation in MATLAB.</p>"}},{"node":{"frontmatter":{"title":"Fast Marching Method Planner","tech":["ROS2","Python","Gazebo","OpenCV","Pygame"],"github":"https://github.com/MayankD409/Fast-Marching-Method.git","external":""},"html":"<p>Implemented a Fast Marching Method path planner for the TurtleBot3 Waffle robot using ROS2 and Python3, and performed efficient path-planning in custom Gazebo simulation.</p>"}},{"node":{"frontmatter":{"title":"Path Planning Algorithms for Point Robot","tech":["Python","Pygame","OpenCV","NumPy"],"github":"https://github.com/MayankD409/Optimal_Path_Planning.git","external":""},"html":"<p>A Python implementation of Dijkstra, Bi-RRT, and Bi-RRT* path planning algorithms for a point robot, featuring real-time visualization with Pygame and video generation using OpenCV.</p>"}},{"node":{"frontmatter":{"title":"Autonomous Differential drive Robot","tech":["ROS","C++","Embedded C","Autonomous Navigation","Sensor Fusion"],"github":"https://github.com/MayankD409/Autonomous_bot.git","external":""},"html":"<p>Engineered an autonomous differential drive robot for terrain mapping using LiDAR technology. Designed and built the system from scratch with Arduino and NVIDIA Jetson Nano as microcontrollers. Developed and implemented the codebase in C++ and ROS1 Noetic, ensuring robust performance and effecient obstacle avoidance.</p>"}},{"node":{"frontmatter":{"title":"A* Algorithm implementation Rigid Robot","tech":["Python","Pygame","OpenCV","NumPy"],"github":"https://github.com/MayankD409/A_star_algorithm_on_rigid_robot.git","external":""},"html":"<p>A Python implementation of the A* algorithm for path planning of rigid robot, featuring real-time visualization with Pygame and OpenCV.</p>"}},{"node":{"frontmatter":{"title":"Ball Shooter and Receiver robot","tech":["Solidworks","Python","Modelling"],"github":"https://github.com/MayankD409/ABU_ROBOCON-2022.git","external":""},"html":"<p>Repository containing my teamâ€™s design submission for the Asia Pacific Robocon 2022, where we achieved 4th place.</p>"}}]}}}