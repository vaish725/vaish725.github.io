{
    "componentChunkName": "component---src-pages-archive-js",
    "path": "/archive/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"5-04-2024","title":"Temporal Coherence Evaluation in Video-Language Models","tech":["Python","PyTorch","CLIP","BERT","HuggingFace"],"github":"https://github.com/MayankD409/Video-Temporal-Consistency-Analysis.git","external":"","company":"UMD"},"html":"<p>Developed a framework to evaluate temporal coherence in multimodal foundation models for video understanding tasks, introducing metrics like CLIPGain for temporal consistency in video captioning and leveraging BERTScore for semantic analysis in video QA. The project was tested on benchmarks such as TOMATO and MSR-VTT, providing nuanced insights into temporal reasoning. Open-sourced the methodology to guide advancements in time-aware AI research.</p>"}},{"node":{"frontmatter":{"date":"4-04-2024","title":"Adaptive RL-MPC for Autonomous Lane-Changing","tech":["Python","SUMO","Reinforcement Learning (SAC/PPO/TD3)","Model Predictive Control","TraCI"],"github":"https://github.com/MayankD409/RL_MPC.git","external":"","company":"UMD"},"html":"<p>A hybrid RL-MPC framework for autonomous vehicle lane-changing, integrating Soft Actor-Critic/PPO/TD3 to dynamically adjust risk-aware weights based on traffic conditions.Designed and trained the RL agent using a curriculum-based protocol in the SUMO simulation environment, achieving 30% higher success rates, 25% lower collision rates, and 20% faster lane-change completion compared to traditional MPC systems.</p>"}},{"node":{"frontmatter":{"date":"12-11-2023","title":"Quadruped Gait Simulation","tech":["C++","ROS2","Gazebo","Python3","URDF","Solidworks"],"github":"https://github.com/MayankD409/Bruno_Quadruped_Sim.git","external":"","company":"UMD"},"html":"<p>A simulation of a quadruped robot developed using C++ and ROS2 Humble. This project includes a detailed URDF model exported from SolidWorks, ROS2 packages for simulation and teleoperation. It enables autonomous navigation and real-time control through Joypad commands, offering a flexible environment for testing and refining quadruped gaits. Currently, the implementation supports trotting and crawling gaits, with plans to incorporate additional gait patterns in the future.</p>"}},{"node":{"frontmatter":{"date":"12-05-2024","title":"VisualOdom-Particle-Filter","tech":["Python","ROS","OpenCV","PyTorch","Particle Filter","CNN Encoders"],"github":"https://github.com/MayankD409/VisualOdom-Particle-Filter.git","external":"","company":"UMD"},"html":"<p>A vision-based localization and visual odometry system for drones utilizing particle filters and advanced image encoding techniques. This project integrates CNN and VecKM (Inner product sum) based encoders, and Histogram of Features encoders to accurately estimate similarity score to update the weights of particle filter and effeciently localize the drone.We were able to validate the performance through simulation in Gazebo and ROS2.</p>"}},{"node":{"frontmatter":{"date":"11-05-2024","title":"Structure from Motion","tech":["Python","OpenCV","Open3D","NumPy","Matplotlib","SciPy"],"github":"https://github.com/MayankD409/Structure-From-Motion.git","external":"","company":"UMD"},"html":"<p>A robust Structure from Motion (SfM) pipeline implemented in Python, utilizing OpenCV and Open3D to reconstruct accurate 3D structures from sequential 2D images. This project processes image pairs to detect and match features, recover camera poses, perform triangulation, and visualize the resulting 3D point cloud, demonstrating effective 3D reconstruction and visualization capabilities.</p>"}},{"node":{"frontmatter":{"date":"09-10-2023","title":"Human detection and Tracking","tech":["C++","OpenCV","MiDAS Resnet","GoogleTest","CMake"],"github":"https://github.com/MayankD409/HumanDetectionandTracking.git","external":"","company":"UMD"},"html":"<p>A C++ module for detecting and tracking human obstacles using Monocular Camera with ResNet &#x26; OpenCV integration within the robot's reference frame.</p>"}},{"node":{"frontmatter":{"date":"08-02-2024","title":"Stereo Vision","tech":["Python","OpenCV","NumPy","Matplotlib"],"github":"https://github.com/MayankD409/Stereo-Vision.git","external":"","company":"UMD"},"html":"<p>A Python-based stereo vision pipeline to accurately generate disparity and depth maps from stereo image pairs with OpenCV and NumPy.</p>"}},{"node":{"frontmatter":{"date":"07-04-2024","title":"Pb-Lite and DL for Edge Detection","tech":["Python","OpenCV","PyTorch","DenseNet","ResNext"],"github":"https://github.com/MayankD409/Pb_lite_Edge_Detection.git","external":"","company":"UMD"},"html":"<p>An edge detection implementation that integrates Probability-based methods (Pb-Lite) with deep learning models like DenseNet, ResNext and a cutom architecture to improve accuracy and robustness.</p>"}},{"node":{"frontmatter":{"date":"07-02-2024","title":"AutoCalib","tech":["Python","OpenCV","NumPy","Matplotlib","CMake"],"github":"https://github.com/MayankD409/AutoCalib.git","external":"","company":"UMD"},"html":"<p>A Python implementation of Zhang's camera calibration method, automating checkerboard detection and accurately estimating camera parameters using OpenCV and NumPy.</p>"}},{"node":{"frontmatter":{"date":"06-12-2023","title":"LQR and LQG for stabilizing Two Pendulum cart","tech":["MATLAB","LQR","LQG","Leunberger Observer"],"github":"","external":"https://www.devoted.com/","company":"Upstatement"},"html":"<p>Modeled and controlled a two-pendulum crane system using cutom LQR and LQG controllers implementation in MATLAB.</p>"}},{"node":{"frontmatter":{"date":"06-04-2024","title":"Fast Marching Method Planner","tech":["ROS2","Python","Gazebo","OpenCV","Pygame"],"github":"https://github.com/MayankD409/Fast-Marching-Method.git","external":"","company":"UMD"},"html":"<p>Implemented a Fast Marching Method path planner for the TurtleBot3 Waffle robot using ROS2 and Python3, and performed efficient path-planning in custom Gazebo simulation.</p>"}},{"node":{"frontmatter":{"date":"05-09-2024","title":"Right Invariant Extended Kalman Filter (RIEKF) for Object-Based SLAM","tech":["Python","NumPy","SciPy","Matplotlib"],"github":"https://github.com/MayankD409/RIEKF_Python.git","external":"","company":"UMD"},"html":"<p>A classic Python implementation of the Right Invariant Extended Kalman Filter (RIEKF) based on the seminal paper \"A Right Invariant Extended Kalman Filter for Object-Based SLAM.\" This project provides a robust framework for simultaneous localization and mapping (SLAM) using object-based observations. I have tried to do detailed documentation and keep a modular code structure to facilitate easy integration in practical applications.</p>"}},{"node":{"frontmatter":{"date":"05-03-2024","title":"Path Planning Algorithms for Point Robot","tech":["Python","Pygame","OpenCV","NumPy"],"github":"https://github.com/MayankD409/Optimal_Path_Planning.git","external":"","company":"UMD"},"html":"<p>A Python implementation of Dijkstra, Bi-RRT, and Bi-RRT* path planning algorithms for a point robot, featuring real-time visualization with Pygame and video generation using OpenCV.</p>"}},{"node":{"frontmatter":{"date":"04-12-2024","title":"MultiRobot Search and Rescue","tech":["C++","ROS2","OpenCV","GoogleTest","Doxygen","YOLOv5"],"github":"https://github.com/MayankD409/MultiRobot_Search_and_Rescue.git","external":"","company":"UMD"},"html":"<p>A robust swarm robotics system for Search and Rescue operations, developed with C++ and ROS2. It features autonomous navigation, real-time object detection using YOLOv5, and seamless multi-robot coordination. The system supports dynamic robot spawning via configuration files or in-code settings, integrates with Nav2 for advanced path planning, and utilizes Gazebo for realistic simulations.</p>"}},{"node":{"frontmatter":{"date":"04-09-2024","title":"Portfolio Website","tech":["ReactJS","Gatsby","GraphQL","Markdown","Javascript"],"github":"https://github.com/MayankD409/MayankD409.github.io.git","external":"https://mayankd.me","company":"."},"html":"<p>Implemented a personal portfolio website showcasing my introduction, projects, experiences and Contact details.</p>"}},{"node":{"frontmatter":{"date":"04-02-2023","title":"Autonomous Differential drive Robot","tech":["ROS","C++","Embedded C","Autonomous Navigation","Sensor Fusion"],"github":"https://github.com/MayankD409/Autonomous_bot.git","external":"","company":"."},"html":"<p>Engineered an autonomous differential drive robot for terrain mapping using LiDAR technology. Designed and built the system from scratch with Arduino and NVIDIA Jetson Nano as microcontrollers. Developed and implemented the codebase in C++ and ROS1 Noetic, ensuring robust performance and effecient obstacle avoidance.</p>"}},{"node":{"frontmatter":{"date":"02-09-2024","title":"A* Algorithm implementation Rigid Robot","tech":["Python","Pygame","OpenCV","NumPy"],"github":"https://github.com/MayankD409/A_star_algorithm_on_rigid_robot.git","external":"","company":"UMD"},"html":"<p>A Python implementation of the A* algorithm for path planning of rigid robot, featuring real-time visualization with Pygame and OpenCV.</p>"}},{"node":{"frontmatter":{"date":"01-02-2022","title":"Ball Shooter and Receiver robot","tech":["Solidworks","Python","Modelling"],"github":"https://github.com/MayankD409/ABU_ROBOCON-2022.git","external":"","company":"RCOEM"},"html":"<p>Repository containing my teamâ€™s design submission for the Asia Pacific Robocon 2022, where we achieved 4th place.</p>"}}]}},"pageContext":{}},
    "staticQueryHashes": ["1994492073","2009693873","3825832676","4162897811"]}